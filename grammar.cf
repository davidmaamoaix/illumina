entrypoints Program;

token Iden (letter (letter | digit | '_')*);

Prog. Program ::= [GlobDecl];

GVarDecl. GlobDecl ::= MVarDef ";";
separator GlobDecl "";

PName. Prop ::= Iden;
separator nonempty Prop " ";

VNoAsn. VarDef ::= VarSig;
VAsn. VarDef ::= VarSig "=" Exp;

separator nonempty VarDef ",";

PProp. PropDecl ::= "[" [Prop] "]";
separator PropDecl "";

MPropVar. MVarDef ::= [PropDecl] [VarDef];
MJustVar. MVarDef ::= [VarDef];

VSig. VarSig ::= Iden ":" Type;

TSimp. Type ::= Iden;
TGen. Type ::= Iden "<" [Type] ">";

separator nonempty Type ",";

EInt. Exp ::= Integer;
EStr. Exp ::= String;